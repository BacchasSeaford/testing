#BlueJ class context
comment0.target=Simulation
comment0.text=\ Simulation\ of\ the\ physical\ components\ of\ the\ ATM,\ including\ its\ network\ \r\n\ \ connection\ to\ the\ bank.\ \ An\ instance\ is\ created\ at\ startup\ by\ either\ the\r\n\ \ application's\ main()\ program\ or\ the\ applet's\ init()\ method.\r\n\r\n\ \ The\ individual\ components\ are\ displayed\ in\ a\ panel\ belonging\ to\ class\ GUI.\r\n\ \ The\ bank\ is\ simulated\ by\ an\ object\ belonging\ to\ class\ SimulatedBank.\ \ The\r\n\ \ constructor\ for\ this\ class\ creates\ one\ instance\ of\ each.\r\n\r\n\ \ The\ static\ method\ getInstance()\ allows\ components\ of\ the\ ATM\ to\ access\ the\ one\r\n\ \ and\ only\ instance\ of\ this\ class\ in\ order\ to\ simulate\ various\ operations.\ \ The\r\n\ \ remaining\ methods\ simulate\ specific\ operations\ of\ the\ ATM,\ and\ are\ forwarded\r\n\ \ to\ either\ the\ GUI\ panel\ or\ the\ simulated\ bank\ to\ actually\ carry\ them\ out.\r\n
comment1.params=atm
comment1.target=Simulation(atm.ATM)
comment10.params=amount
comment10.target=void\ dispenseCash(banking.Money)
comment10.text=\ Simulate\ dispensing\ cash\ to\ a\ customer\r\n\r\n\ \ @param\ amount\ the\ amount\ of\ cash\ to\ dispense\r\n\r\n\ \ Precondition\:\ amount\ is\ <\=\ cash\ on\ hand\r\n
comment11.params=
comment11.target=boolean\ acceptEnvelope()
comment11.text=\ Simulate\ accepting\ an\ envelope\ from\ customer.\r\n\r\n\ \ return\ true\ if\ an\ envelope\ was\ received\ within\ the\ prescribed\ time,\r\n\ \ \ \ \ \ \ \ \ else\ false\r\n
comment12.params=text
comment12.target=void\ printReceiptLine(java.lang.String)
comment12.text=\ Simulate\ printing\ one\ line\ of\ a\ receipt\r\n\r\n\ \ @param\ text\ the\ line\ to\ print\r\n
comment13.params=text
comment13.target=void\ printLogLine(java.lang.String)
comment13.text=\ Simulate\ printing\ a\ line\ to\ the\ log\r\n\r\n\ \ @param\ text\ the\ line\ to\ print\r\n
comment14.params=message\ balances
comment14.target=banking.Status\ sendMessage(banking.Message,\ banking.Balances)
comment14.text=\ Simulate\ sending\ a\ message\ to\ bank\r\n\r\n\ \ @param\ message\ the\ message\ to\ send\r\n\ \ @param\ balances\ (out)\ balances\ in\ customer's\ account\ as\ reported\r\n\ \ \ \ \ \ \ \ \ by\ bank\r\n\ \ @return\ status\ code\ returned\ by\ bank\r\n
comment15.params=on
comment15.target=void\ switchChanged(boolean)
comment15.text=\ Notify\ the\ ATM\ that\ the\ state\ of\ the\ on-off\ switch\ has\ been\ changed\r\n\r\n\ \ @param\ on\ true\ if\ state\ is\ now\ "on",\ false\ if\ it\ is\ "off"\r\n
comment16.params=
comment16.target=void\ cardInserted()
comment16.text=\ Notify\ ATM\ that\ a\ card\ has\ been\ inserted\r\n
comment17.params=
comment17.target=GUI\ getGUI()
comment17.text=\ Accessor\ for\ GUI\ Panel\ that\ simulates\ the\ ATM\r\n\r\n\ \ @return\ the\ GUI\ Panel\r\n
comment18.params=
comment18.target=SimulatedBank\ getSimulatedBank()
comment18.text=\ Accessor\ for\ simulated\ bank\r\n\r\n\ \ @return\ simulated\ bank\r\n
comment2.params=
comment2.target=Simulation\ getInstance()
comment2.text=\ Accessor\ for\ the\ one\ and\ only\ instance\ of\ this\ class\r\n\r\n\ \ @return\ the\ instance\ of\ this\ class\r\n
comment3.params=
comment3.target=banking.Money\ getInitialCash()
comment3.text=\ Simulated\ getting\ initial\ amount\ of\ cash\ from\ operator\r\n\r\n\ \ @return\ value\ of\ initial\ cash\ entered\r\n
comment4.params=
comment4.target=banking.Card\ readCard()
comment4.text=\ Simulate\ reading\ of\ a\ card\r\n\r\n\r\n\ \ @return\ Card\ object\ representing\ information\ on\ the\ card\ if\ read\r\n\ \ \ \ \ \ \ \ \ \ successfully,\ null\ if\ not\ read\ successfully\r\n
comment5.params=
comment5.target=void\ ejectCard()
comment5.text=\ Simulate\ ejecting\ a\ card\ \r\n
comment6.params=
comment6.target=void\ retainCard()
comment6.text=\ Simulate\ retaining\ a\ card\r\n
comment7.params=
comment7.target=void\ clearDisplay()
comment7.text=\ Clear\ the\ simulated\ display\r\n
comment8.params=text
comment8.target=void\ display(java.lang.String)
comment8.text=\ Write\ one\ or\ more\ lines\ to\ the\ display\ -\ beginning\ just\ after\ the\r\n\ \ last\ line\ written\r\n\r\n\ \ @param\ text\ the\ text\ to\ display\r\n
comment9.params=mode\ maxValue
comment9.target=java.lang.String\ readInput(int,\ int)
comment9.text=\ Simulate\ reading\ input\ from\ the\ keyboard\r\n\r\n\ \ @param\ mode\ the\ input\ mode\ to\ use\ -\ one\ of\ the\ constants\ defined\ below.\r\n\ \ @param\ maxValue\ the\ maximum\ acceptable\ value\ (used\ in\ MENU_MODE\ only)\r\n\ \ @return\ the\ line\ that\ was\ entered\ -\ null\ if\ user\ pressed\ CANCEL.\r\n
numComments=19
